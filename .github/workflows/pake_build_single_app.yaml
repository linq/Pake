name: Build Single Popular App
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'app name'
        required: true
        default: 'weread'
      title:
        description: 'app title'
        required: true
        default: 'WeRead'
      name_zh:
        description: 'app name in Chinese'
        required: true
        default: '微信阅读'
      url:
        description: 'app url'
        required: true
        default: 'https://weread.qq.com/'

jobs:
  build_single_app:
    name: ${{ inputs.title }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [macos]
        include:
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Rust cache restore
        id: cache_store
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Config App
        env:
          NAME: ${{ inputs.name }}
          TITLE: ${{ inputs.title }}
          NAME_ZH: ${{ inputs.name_zh }}
          URL: ${{ inputs.url }}
        run: |
          npm install
          npm run build:config

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
          npm run tauri build -- --target universal-apple-darwin
          mkdir -p output/macos
          mv src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg output/macos/"${{inputs.title}}".dmg

      - name: Rust cache store
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Upload For Single Build
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/') != true
        with:
          path: 'output/*/*.*'

      - name: Upload For Release
        # arg info: https://github.com/ncipollo/release-action#release-action
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/') == true
        with:
          allowUpdates: true
          artifacts: 'output/*/*.*'
          token: ${{ secrets.GITHUB_TOKEN }}
